{"version":3,"file":"static/js/59.e57d106c.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/KeyboardArrowLeftOutlined.js","../node_modules/@mui/icons-material/esm/SendRounded.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeftOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m3.4 20.4 17.45-7.48c.81-.35.81-1.49 0-1.84L3.4 3.6c-.66-.29-1.39.2-1.39.91L2 9.12c0 .5.37.93.87.99L17 12 2.87 13.88c-.5.07-.87.5-.87 1l.01 4.61c0 .71.73 1.2 1.39.91z\"\n}), 'SendRounded');","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["createSvgIcon","_jsx","d","_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","writable","query","socket","readyState","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","onPause","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","withErr","reject","arg1","arg2","tryCount","pending","hasError","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}