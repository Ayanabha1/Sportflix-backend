{"version":3,"file":"static/js/477.bf4ce6f5.chunk.js","mappings":"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","sources":["Components/Add Event Form/AddEventMap.jsx","Components/Add Event Form/AddEventForm.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"./addEventMap.css\";\r\nimport L from \"leaflet\";\r\n\r\nfunction AddEventMap({ markerLocation }) {\r\n  const [userLocation, setUserLocation] = useState([0, 0]);\r\n  const [zoom, setZoom] = useState(2);\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      if (pos) {\r\n        setUserLocation([pos.coords.latitude, pos.coords.longitude]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const focusMapToUserLocation = (locationToFocus) => {\r\n    let zoom, shiftedLocationToFocus;\r\n\r\n    // Allign to center\r\n    zoom = 14;\r\n\r\n    mapRef.current?.flyTo(locationToFocus, zoom, {\r\n      duration: 3,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userLocation[0] !== 0 && userLocation[1] !== 0) {\r\n      focusMapToUserLocation(userLocation);\r\n    }\r\n  }, [userLocation]);\r\n\r\n  useEffect(() => {\r\n    if (markerLocation[0] !== 0 && markerLocation[1] !== 0) {\r\n      focusMapToUserLocation(markerLocation);\r\n    }\r\n  }, [markerLocation]);\r\n\r\n  return (\r\n    <MapContainer center={userLocation} zoom={zoom} ref={mapRef}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution=\"Map data Â© <a href='https://openstreetmap.org'>OpenStreetMap</a> contributors\"\r\n      />\r\n      {markerLocation[0] !== 0 && markerLocation[1] !== 0 && (\r\n        <Marker position={markerLocation}></Marker>\r\n      )}\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\nexport default AddEventMap;\r\n","import { KeyboardArrowLeftRounded } from \"@mui/icons-material\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Api } from \"../../Api/Axios\";\r\nimport { useDataLayerValue } from \"../../Datalayer/DataLayer\";\r\nimport \"./addEvent.css\";\r\nimport AddEventMap from \"./AddEventMap\";\r\nimport { LocationIQProvider } from \"leaflet-geosearch\";\r\nimport L from \"leaflet\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddEventForm() {\r\n  const [{ userData }, dispatch] = useDataLayerValue();\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const [eventDetails, setEventDetails] = useState({});\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState();\r\n  const [markerLocation, setMarkerLocation] = useState([0, 0]);\r\n  const navigate = useNavigate();\r\n  const history = useNavigate();\r\n  const [screenWidth, setScreenWidth] = useState(null);\r\n  const location_iq_api_key = process.env.REACT_APP_LOCATION_IQ_API_KEY;\r\n\r\n  const provider = new LocationIQProvider({\r\n    params: {\r\n      key: location_iq_api_key,\r\n    },\r\n  });\r\n\r\n  const changeEventData = (e) => {\r\n    const { id, value } = e.target;\r\n    setEventDetails((prevState) => ({ ...prevState, [id]: value }));\r\n  };\r\n\r\n  const addEventDataFunc = async (e) => {\r\n    e.preventDefault();\r\n    const target_loc = {\r\n      longitude: selectedLocation?.raw?.lon,\r\n      latitude: selectedLocation?.raw?.lat,\r\n      location: selectedLocation?.raw?.display_name?.split(\",\")[0],\r\n      city: selectedLocation?.city,\r\n      state: selectedLocation?.state,\r\n      country: selectedLocation?.country,\r\n    };\r\n    const eventDataToPush = {\r\n      host: userData?.name,\r\n      participants: [userData?._id],\r\n      ...eventDetails,\r\n      ...target_loc,\r\n    };\r\n    //console.log(eventDataToPush);\r\n    dispatch({ type: \"SET_LOADING\", loading: true });\r\n    await Api.post(\"/events/add-event\", eventDataToPush)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: \"SET_RESPONSE_DATA\",\r\n          responseData: { message: res.data?.message, type: \"success\" },\r\n        });\r\n\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"SET_RESPONSE_DATA\",\r\n          responseData: {\r\n            message: err?.response?.data?.message,\r\n            type: \"error\",\r\n          },\r\n        });\r\n      });\r\n    dispatch({ type: \"SET_LOADING\", loading: false });\r\n  };\r\n\r\n  const searchLocation = async (e) => {\r\n    const key = e.target.value;\r\n    setSearchKey(key);\r\n    try {\r\n      const res = await provider?.search({ query: key });\r\n      // //console.log(res);\r\n      setSearchResults(res);\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleLocationSelect = async (loc) => {\r\n    dispatch({ type: \"SET_LOADING\", loading: true });\r\n    const lat = loc?.raw?.lat;\r\n    const lon = loc?.raw?.lon;\r\n    await axios\r\n      .get(\r\n        `https://us1.locationiq.com/v1/reverse?key=${location_iq_api_key}&lat=${lat}&lon=${lon}&format=json`\r\n      )\r\n      .then((res) => {\r\n        loc.city = res.data.address.city;\r\n        loc.state = res.data.address.state;\r\n        loc.country = res.data.address.country;\r\n        //console.log(loc);\r\n        setSearchResults([]);\r\n        setSelectedLocation(loc);\r\n        setSearchKey(loc?.raw?.display_name);\r\n        setMarkerLocation([lat, lon]);\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"SET_RESPONSE_DATA\",\r\n          responseData: {\r\n            message: \"Something went wrong with the selected location\",\r\n            type: \"error\",\r\n          },\r\n        });\r\n      });\r\n\r\n    dispatch({ type: \"SET_LOADING\", loading: false });\r\n  };\r\n\r\n  const changeScreenWidth = () => {\r\n    setScreenWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setScreenWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", changeScreenWidth);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"add-event-form\">\r\n      <div className=\"add-event-form-container\">\r\n        <div className=\"add-event-back\">\r\n          <button onClick={() => history(-1)}>\r\n            <KeyboardArrowLeftRounded /> Back\r\n          </button>\r\n        </div>\r\n        <div className=\"add-event-form-main-container\">\r\n          <div className=\"add-event-form-left\">\r\n            <form\r\n              onSubmit={(e) => {\r\n                addEventDataFunc(e);\r\n              }}\r\n              className=\"add-event-input-form\"\r\n            >\r\n              <div className=\"add-event-form-fields\">\r\n                <h3 className=\"add-event-form-heading\">Add Event Details</h3>\r\n                <TextField\r\n                  label=\"Host Name\"\r\n                  value={userData?.name}\r\n                  variant=\"filled\"\r\n                  className=\"add-event-input-field\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  id=\"host\"\r\n                  onChange={(e) => changeEventData(e)}\r\n                />\r\n                <div className=\"add-event-location-inp-container\">\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    className=\"add-event-input-field\"\r\n                    placeholder=\"Select from map\"\r\n                    id=\"location_name\"\r\n                    value={searchKey}\r\n                    onChange={(e) => {\r\n                      searchLocation(e);\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    required\r\n                  />\r\n                  {(!selectedLocation || searchResults?.length !== 0) && (\r\n                    <div className=\"add-event-location-results-container\">\r\n                      {searchResults?.map((res, i) => (\r\n                        <p\r\n                          key={i}\r\n                          className=\"aelr-search-card\"\r\n                          onClick={() => handleLocationSelect(res)}\r\n                        >\r\n                          {res?.raw?.display_name}\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <TextField\r\n                  className=\"add-event-input-field\"\r\n                  variant=\"standard\"\r\n                  label=\"Type Of Sport\"\r\n                  id=\"type\"\r\n                  onChange={(e) => changeEventData(e)}\r\n                  required\r\n                />\r\n                <TextField\r\n                  className=\"add-event-input-field\"\r\n                  variant=\"standard\"\r\n                  label=\"Description\"\r\n                  id=\"description\"\r\n                  onChange={(e) => changeEventData(e)}\r\n                  multiline\r\n                  required\r\n                />\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Date\"\r\n                  type=\"date\"\r\n                  variant=\"standard\"\r\n                  className=\"add-event-input-field\"\r\n                  onChange={(e) => changeEventData(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Maximum Players\"\r\n                  type=\"number\"\r\n                  InputProps={{ inputProps: { min: 2 } }}\r\n                  variant=\"standard\"\r\n                  className=\"add-event-input-field\"\r\n                  id=\"max_players\"\r\n                  onChange={(e) => changeEventData(e)}\r\n                  required\r\n                />\r\n                <TextField\r\n                  label=\"Minimum Age (optional)\"\r\n                  type=\"number\"\r\n                  InputProps={{ inputProps: { min: 1 } }}\r\n                  variant=\"standard\"\r\n                  className=\"add-event-input-field\"\r\n                  id=\"min_age\"\r\n                  onChange={(e) => changeEventData(e)}\r\n                />\r\n                {screenWidth < 1000 && (\r\n                  <div className=\"mobile-event-map\">\r\n                    <AddEventMap markerLocation={markerLocation} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                className=\"add-event-form-btn\"\r\n              >\r\n                Add Event\r\n              </Button>\r\n            </form>\r\n          </div>\r\n          {screenWidth >= 1000 && (\r\n            <div className=\"add-event-form-right\">\r\n              <AddEventMap markerLocation={markerLocation} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEventForm;\r\n"],"names":["markerLocation","useState","userLocation","setUserLocation","zoom","mapRef","useRef","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","focusMapToUserLocation","locationToFocus","current","flyTo","duration","MapContainer","center","ref","TileLayer","url","attribution","Marker","position","useDataLayerValue","userData","dispatch","searchKey","setSearchKey","eventDetails","setEventDetails","searchResults","setSearchResults","selectedLocation","setSelectedLocation","setMarkerLocation","navigate","useNavigate","history","screenWidth","setScreenWidth","location_iq_api_key","process","provider","LocationIQProvider","params","key","changeEventData","e","target","id","value","prevState","addEventDataFunc","preventDefault","target_loc","raw","lon","lat","location","display_name","split","city","state","country","eventDataToPush","host","name","participants","_id","type","loading","Api","then","res","responseData","message","data","catch","err","response","searchLocation","search","query","handleLocationSelect","loc","axios","address","changeScreenWidth","window","innerWidth","addEventListener","className","onClick","KeyboardArrowLeftRounded","onSubmit","TextField","label","variant","InputProps","readOnly","onChange","placeholder","autoComplete","required","length","map","i","multiline","InputLabelProps","shrink","inputProps","min","Button"],"sourceRoot":""}