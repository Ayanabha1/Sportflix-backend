{"version":3,"file":"static/js/97.67af0ed7.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","Components/Event/Event.jsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import { ArrowBack, PeopleAltRounded } from \"@mui/icons-material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDataLayerValue } from \"../../Datalayer/DataLayer\";\r\nimport \"./Event.css\";\r\nimport img1 from \"../../Common resources/img1.jpeg\";\r\nimport img2 from \"../../Common resources/img2.png\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Api } from \"../../Api/Axios\";\r\n\r\nfunction Event() {\r\n  const urlParams = useParams();\r\n  const navigate = useNavigate();\r\n  const [imageSelected, setImageSelected] = useState(0);\r\n  const [{ loggedIn, userData, homeHidden }, dispatch] = useDataLayerValue();\r\n  const [eventInfo, setEventInfo] = useState({});\r\n\r\n  // Location event on map\r\n  const locateEvent = () => {\r\n    dispatch({ type: \"FLY_TO_LOCATION\", id: eventInfo._id });\r\n    dispatch({ type: \"SET_HOME_HIDDEN\", homeHidden: true });\r\n  };\r\n\r\n  // Function to change date format\r\n  const changeDateFormat = (rawDate) => {\r\n    const d = new Date(rawDate);\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const month = months[d.getMonth()];\r\n    const date = d.getDate();\r\n    const year = d.getFullYear();\r\n    return `${month} ${date} , ${year}`;\r\n  };\r\n\r\n  // Function to get target event details\r\n  const getEventDetails = async (eventId) => {\r\n    dispatch({ type: \"SET_LOADING\", loading: true });\r\n\r\n    await Api.get(\"/events/get-event-by-id\", { params: { eventId: eventId } })\r\n      .then((res) => {\r\n        setEventInfo(res.data?.event);\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"SET_RESPONSE_DATA\",\r\n          responseData: {\r\n            message: err?.response?.data?.message,\r\n            type: \"error\",\r\n          },\r\n        });\r\n      });\r\n    dispatch({ type: \"SET_LOADING\", loading: false });\r\n  };\r\n\r\n  // Function to join event\r\n  const joinEvent = async () => {\r\n    dispatch({ type: \"SET_LOADING\", loading: true });\r\n    const eventId = eventInfo?._id;\r\n    await Api.post(\"/events/join-event\", { eventId: eventId })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: \"SET_RESPONSE_DATA\",\r\n          responseData: { message: res.data?.message, type: \"success\" },\r\n        });\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n        dispatch({\r\n          type: \"SET_RESPONSE_DATA\",\r\n          responseData: {\r\n            message: err?.response?.data?.message,\r\n            type: \"error\",\r\n          },\r\n        });\r\n      });\r\n    dispatch({ type: \"SET_LOADING\", loading: false });\r\n  };\r\n\r\n  const userAlreadyRegistered = () => {\r\n    const userId = userData?._id;\r\n    return eventInfo?.participants?.includes(userId);\r\n  };\r\n\r\n  const isHost = () => {\r\n    return userData?._id === eventInfo?.host_id;\r\n  };\r\n\r\n  const isParticipant = () => {\r\n    return eventInfo?.participants?.includes(userData?._id);\r\n  };\r\n  const isOver = () => {\r\n    return new Date() > new Date(eventInfo?.date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const eventId = urlParams.id;\r\n    getEventDetails(eventId);\r\n  }, [urlParams?.id]);\r\n\r\n  return (\r\n    <div className=\"event-container\">\r\n      <div\r\n        className=\"event-back\"\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n          // dispatch({ type: \"SET_FOCUS_MAP_TO_CENTER\", focusMapToCenter: true });\r\n        }}\r\n      >\r\n        <ArrowBack sx={{ color: \"rgb(162 161 161)\", fontSize: \"17px\" }} />{\" \"}\r\n        <span>Back</span>\r\n      </div>\r\n      <div className=\"event-main-container\">\r\n        <div className=\"event-top\">\r\n          <div className=\"event-main-img-continer\">\r\n            <div className=\"event-main-image-container\">\r\n              <img className=\"event-main-img\" src={img2}></img>\r\n            </div>\r\n            <div className=\"event-more-img-container\">\r\n              <img className=\"event-more-img\" src={img2} />\r\n              <img className=\"event-more-img\" src={img1} />\r\n            </div>\r\n          </div>\r\n          <div className=\"event-more-images-mobile\">\r\n            <div className=\"event-more-images-container-mobile\">\r\n              <img className=\"event-more-img-mobile\" src={img2} />\r\n              <img className=\"event-more-img-mobile\" src={img1} />\r\n            </div>\r\n          </div>\r\n          <div className=\"event-info event-host\">\r\n            <span>Hosted by {eventInfo?.host} </span>\r\n          </div>\r\n          <div className=\"event-stickers\">\r\n            {loggedIn && isHost() && (\r\n              <div className=\"card-sticker host-sticker\">Hosted by you</div>\r\n            )}\r\n            {loggedIn && isParticipant() && (\r\n              <div className=\"card-sticker participant-sticker\">\r\n                Participant\r\n              </div>\r\n            )}\r\n            {isOver() && (\r\n              <div className=\"card-sticker past-sticker\">Closed</div>\r\n            )}\r\n          </div>\r\n          <div className=\"event-top-container\">\r\n            <div className=\"event-info event-location\">\r\n              <h3>\r\n                {eventInfo?.location} , {eventInfo?.city}, {eventInfo?.state},{\" \"}\r\n                {eventInfo?.country}\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"event-info-date-participants\">\r\n              <div className=\"event-info event-date\">\r\n                {changeDateFormat(eventInfo?.date)}\r\n              </div>\r\n              <div className=\"event-people-info\">\r\n                <div className=\"event-info event-people\">\r\n                  <PeopleAltRounded\r\n                    className=\"event-people-icon\"\r\n                    sx={{ marginRight: \"3px\" }}\r\n                  />\r\n                  <span>{eventInfo?.participants?.length}</span>\r\n                </div>\r\n                {eventInfo?.max_players && (\r\n                  <div className=\"event-info event-people\">\r\n                    <span>Max players: {eventInfo?.max_players}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {eventInfo?.min_age && (\r\n                <div className=\"event-info event-people\">\r\n                  <span>Minimum age : {eventInfo?.min_age}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {eventInfo?.description && (\r\n              <div className=\"event-info event-desc\">\r\n                <p>Event details</p>\r\n                {eventInfo?.description}\r\n              </div>\r\n            )}\r\n            <div className=\"event-interaction-btns\">\r\n              {loggedIn && userAlreadyRegistered() ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"event-join-btn\"\r\n                  onClick={() => navigate(\"/chat\")}\r\n                >\r\n                  Chat\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"event-join-btn\"\r\n                  onClick={() => joinEvent()}\r\n                >\r\n                  Participate\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"event-join-btn\"\r\n                onClick={() => locateEvent()}\r\n              >\r\n                Location\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n"],"names":["createSvgIcon","_jsx","d","urlParams","useParams","navigate","useNavigate","useState","useDataLayerValue","loggedIn","userData","dispatch","homeHidden","eventInfo","setEventInfo","getEventDetails","eventId","type","loading","Api","params","then","res","data","event","catch","err","responseData","message","response","joinEvent","_id","useEffect","id","className","onClick","ArrowBack","sx","color","fontSize","src","img2","img1","host","host_id","participants","includes","isParticipant","Date","date","location","city","state","country","rawDate","month","getMonth","getDate","year","getFullYear","changeDateFormat","PeopleAltRounded","marginRight","length","max_players","min_age","description","userId","userAlreadyRegistered","Button","variant"],"sourceRoot":""}